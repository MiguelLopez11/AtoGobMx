// <auto-generated />
using System;
using AtoGobMx.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtoGobMx.Migrations
{
    [DbContext(typeof(AtoGobMxContext))]
    [Migration("20221225014814_ArchivosCementerio")]
    partial class ArchivosCementerio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AtoGobMx.Models.Alumbrado", b =>
                {
                    b.Property<int>("AlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DescripcionDomicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionProblema")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EstatusId")
                        .HasColumnType("int");

                    b.Property<int?>("InventarioAlumbradoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreObra")
                        .HasColumnType("longtext");

                    b.Property<int?>("TareaTipoId")
                        .HasColumnType("int");

                    b.Property<bool>("TieneExpediente")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("AlumbradoId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("InventarioAlumbradoId");

                    b.HasIndex("TareaTipoId");

                    b.ToTable("Alumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.Archivos", b =>
                {
                    b.Property<int>("ArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ExpedienteDigitalId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoArchivo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ArchivoId");

                    b.HasIndex("ExpedienteDigitalId");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("AtoGobMx.Models.ArchivosAlumbrado", b =>
                {
                    b.Property<int>("ArvhivoAlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlumbradoId")
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ArvhivoAlumbradoId");

                    b.HasIndex("AlumbradoId");

                    b.ToTable("ArchivosAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ArchivosCementerios", b =>
                {
                    b.Property<int>("ArchivosCementerioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DireccionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ArchivosCementerioId");

                    b.HasIndex("DireccionId");

                    b.ToTable("ArchivosCementerios");
                });

            modelBuilder.Entity("AtoGobMx.Models.Aseo", b =>
                {
                    b.Property<int>("AseoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EstablecimientoPublico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AseoId");

                    b.ToTable("Aseo");
                });

            modelBuilder.Entity("AtoGobMx.Models.Cementerios", b =>
                {
                    b.Property<int>("CementeriosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DireccionId")
                        .HasColumnType("int");

                    b.Property<int>("EspaciosDisponibles")
                        .HasColumnType("int");

                    b.Property<float>("Latitud")
                        .HasColumnType("float");

                    b.Property<float>("Longitud")
                        .HasColumnType("float");

                    b.Property<float>("MetrosCorrespondientes")
                        .HasColumnType("float");

                    b.Property<string>("NombrePropietario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroEspasios")
                        .HasColumnType("int");

                    b.HasKey("CementeriosId");

                    b.HasIndex("DireccionId");

                    b.ToTable("Cementerios");
                });

            modelBuilder.Entity("AtoGobMx.Models.Coordenadas_Rutas", b =>
                {
                    b.Property<int>("CoordenadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitud")
                        .HasColumnType("double");

                    b.Property<double>("Longitud")
                        .HasColumnType("double");

                    b.Property<int>("OrdenCoordenada")
                        .HasColumnType("int");

                    b.Property<int>("RutaId")
                        .HasColumnType("int");

                    b.HasKey("CoordenadaId");

                    b.HasIndex("RutaId");

                    b.ToTable("Coordenadas_Ruta");
                });

            modelBuilder.Entity("AtoGobMx.Models.Departamentos", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            DepartamentoId = 1,
                            Archivado = false,
                            Nombre = "Direccion de Sistemas"
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.DireccionCementerio", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Latitud")
                        .HasColumnType("float");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCementerio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroExterior")
                        .HasColumnType("int");

                    b.HasKey("DireccionId");

                    b.ToTable("DireccionCementerio");
                });

            modelBuilder.Entity("AtoGobMx.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PuestoTrabajoId")
                        .HasColumnType("int");

                    b.Property<bool>("TieneExpediente")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("PuestoTrabajoId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            EmpleadoId = 1,
                            Archivado = false,
                            DepartamentoId = 1,
                            FechaAlta = new DateTime(2022, 12, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            NombreCompleto = "Administrador",
                            PuestoTrabajoId = 1,
                            TieneExpediente = true
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.EmpleadosAlumbrado", b =>
                {
                    b.Property<int>("AlumbradoEmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpedienteAlumbradoId")
                        .HasColumnType("int");

                    b.HasKey("AlumbradoEmpleadoId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ExpedienteAlumbradoId");

                    b.ToTable("EmpleadosAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.EstatusAlumbrado", b =>
                {
                    b.Property<int>("EstatusAlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEstatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstatusAlumbradoId");

                    b.ToTable("EstatusAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteAlumbrado", b =>
                {
                    b.Property<int>("ExpedienteAlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlumbradoId")
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionSolucion")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Localidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nomenclatura")
                        .HasColumnType("longtext");

                    b.Property<int?>("PAT_VehiculoVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("ExpedienteAlumbradoId");

                    b.HasIndex("AlumbradoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("PAT_VehiculoVehiculoId");

                    b.ToTable("ExpedienteAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteDigital", b =>
                {
                    b.Property<int>("ExpedienteDigitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Calle")
                        .HasColumnType("longtext");

                    b.Property<int?>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Localidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Municipio")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumeroExterior")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroInterior")
                        .HasColumnType("int");

                    b.HasKey("ExpedienteDigitalId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ExpedienteDigital");

                    b.HasData(
                        new
                        {
                            ExpedienteDigitalId = 1,
                            Archivado = false,
                            EmpleadoId = 1
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.InventarioAlumbrado", b =>
                {
                    b.Property<int>("InventarioAlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("InventarioAlumbradoId");

                    b.ToTable("InventarioAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_Empleados", b =>
                {
                    b.Property<int>("EmpleadoObrasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoObrasId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ObraId");

                    b.ToTable("OP_Empleados");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_EstatusObras", b =>
                {
                    b.Property<int>("EstatusObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstatusObraId");

                    b.ToTable("OP_EstatusObras");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_Obras", b =>
                {
                    b.Property<int>("ObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EstatusObraId")
                        .HasColumnType("int");

                    b.Property<float>("Latitud")
                        .HasColumnType("float");

                    b.Property<float>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ObraId");

                    b.HasIndex("EstatusObraId");

                    b.ToTable("ObrasPublicas");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Armeria", b =>
                {
                    b.Property<int>("ArmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Calibre")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoArma")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ArmaId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Armeria");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_EquipoComputo", b =>
                {
                    b.Property<int>("EquipoComputoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Almacenamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoInventario")
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("EstatusEquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MemoriaRAM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Procesador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EquipoComputoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("EstatusEquipoId");

                    b.ToTable("EquipoComputo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_EstatusEquipo", b =>
                {
                    b.Property<int>("EstatusEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstatusEquipoId");

                    b.ToTable("InventarioEstatus");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_EstatusVehiculo", b =>
                {
                    b.Property<int>("EstatusVehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstatusVehiculoId");

                    b.ToTable("EstatusVehiculo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Mobiliario", b =>
                {
                    b.Property<int>("MobiliarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoInventario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoMobiliarioId")
                        .HasColumnType("int");

                    b.HasKey("MobiliarioId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("TipoMobiliarioId");

                    b.ToTable("Mobiliario");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Monitor", b =>
                {
                    b.Property<int>("MonitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EquipoComputoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<int?>("Pulgadas")
                        .HasColumnType("int");

                    b.HasKey("MonitorId");

                    b.HasIndex("EquipoComputoId");

                    b.ToTable("Monitor");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Mouse", b =>
                {
                    b.Property<int>("MouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EquipoComputoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConexion")
                        .HasColumnType("longtext");

                    b.HasKey("MouseId");

                    b.HasIndex("EquipoComputoId");

                    b.ToTable("Mouse");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Teclado", b =>
                {
                    b.Property<int>("TecladoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EquipoComputoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConexion")
                        .HasColumnType("longtext");

                    b.HasKey("TecladoId");

                    b.HasIndex("EquipoComputoId");

                    b.ToTable("Teclado");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_TipoMobiliario", b =>
                {
                    b.Property<int>("TipoMobiliarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoMobiliarioId");

                    b.ToTable("TipoMobiliario");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("AñoLanzamiento")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EstatusVehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Puertas")
                        .HasColumnType("int");

                    b.Property<string>("Transmisión")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VehiculoId");

                    b.HasIndex("EstatusVehiculoId");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_ControlVales", b =>
                {
                    b.Property<int>("ControlValeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstatusValeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEmicion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaVigencia")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("ControlValeId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstatusValeId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("TipoId");

                    b.ToTable("ControlDeVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_DetalleVale", b =>
                {
                    b.Property<int>("DetalleValeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ControlValeId")
                        .HasColumnType("int");

                    b.Property<float?>("Importe")
                        .HasColumnType("float");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<float?>("Total")
                        .HasColumnType("float");

                    b.HasKey("DetalleValeId");

                    b.HasIndex("ControlValeId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PROV_DetalleVale");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_EstatusVale", b =>
                {
                    b.Property<int>("EstatusValeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstatusValeId");

                    b.ToTable("PROV_EstatusVale");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductoId");

                    b.ToTable("PROV_Producto");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentanteLegal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("ProveedorId");

                    b.ToTable("PROV_Proveedor");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_TipoVales", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoId");

                    b.ToTable("TipoVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PuestoTrabajo", b =>
                {
                    b.Property<int>("PuestoTrabajoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("PuestoTrabajoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("PuestoTrabajo");

                    b.HasData(
                        new
                        {
                            PuestoTrabajoId = 1,
                            Archivado = false,
                            DepartamentoId = 1,
                            Nombre = "Auxiliar de soporte"
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.Ruta", b =>
                {
                    b.Property<int>("RutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Horario")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext");

                    b.HasKey("RutaId");

                    b.ToTable("Ruta");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Cita", b =>
                {
                    b.Property<int>("CitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("FechaDesde")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechaHasta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CitaId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_EstatusReceta", b =>
                {
                    b.Property<int>("EstatusRecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SERMED_EstatusRecetaEstatusRecetaId")
                        .HasColumnType("int");

                    b.HasKey("EstatusRecetaId");

                    b.HasIndex("SERMED_EstatusRecetaEstatusRecetaId");

                    b.ToTable("EstatusReceta");

                    b.HasData(
                        new
                        {
                            EstatusRecetaId = 1,
                            Archivado = false,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            EstatusRecetaId = 2,
                            Archivado = false,
                            Nombre = "Surtido"
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_ExpedienteMedico", b =>
                {
                    b.Property<int>("ExpedienteMedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alergias")
                        .HasColumnType("longtext");

                    b.Property<string>("AntecedentesFamiliares")
                        .HasColumnType("longtext");

                    b.Property<string>("AntecedentesPersonales")
                        .HasColumnType("longtext");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Discapacidad")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<float?>("Estatura")
                        .HasColumnType("float");

                    b.Property<float?>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoSangre")
                        .HasColumnType("longtext");

                    b.HasKey("ExpedienteMedicoId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ExpedienteMedico");

                    b.HasData(
                        new
                        {
                            ExpedienteMedicoId = 1,
                            Archivado = false,
                            EmpleadoId = 1
                        });
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadFaltante")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductoId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_ProductosReceta", b =>
                {
                    b.Property<int>("ProductoRecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int");

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("ProductoRecetaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("RecetaId");

                    b.ToTable("ProductoReceta");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Receta", b =>
                {
                    b.Property<int>("RecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstatusRecetaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("diagnostico")
                        .HasColumnType("longtext");

                    b.HasKey("RecetaId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstatusRecetaId");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("AtoGobMx.Models.TareaTipoAlumbrado", b =>
                {
                    b.Property<int>("TareaTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreTarea")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TareaTipoId");

                    b.ToTable("TareaTipoAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.VehiculosAlumbrado", b =>
                {
                    b.Property<int>("VehiculoAlumbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ExpedienteAlumbradoId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("VehiculoAlumbradoId");

                    b.HasIndex("ExpedienteAlumbradoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("VehiculosAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.Zona", b =>
                {
                    b.Property<int>("zonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Archivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("zonaId");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AtoGobMx.Models.Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("AtoGobMx.Models.Alumbrado", b =>
                {
                    b.HasOne("AtoGobMx.Models.EstatusAlumbrado", "Estatus")
                        .WithMany("Alumbrado")
                        .HasForeignKey("EstatusId");

                    b.HasOne("AtoGobMx.Models.InventarioAlumbrado", "InventarioAlumbrado")
                        .WithMany("Alumbrado")
                        .HasForeignKey("InventarioAlumbradoId");

                    b.HasOne("AtoGobMx.Models.TareaTipoAlumbrado", "TareaTipoAlumbrado")
                        .WithMany("Alumbrado")
                        .HasForeignKey("TareaTipoId");

                    b.Navigation("Estatus");

                    b.Navigation("InventarioAlumbrado");

                    b.Navigation("TareaTipoAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.Archivos", b =>
                {
                    b.HasOne("AtoGobMx.Models.ExpedienteDigital", "expedienteDigital")
                        .WithMany("Archivos")
                        .HasForeignKey("ExpedienteDigitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("expedienteDigital");
                });

            modelBuilder.Entity("AtoGobMx.Models.ArchivosAlumbrado", b =>
                {
                    b.HasOne("AtoGobMx.Models.Alumbrado", "Alumbrado")
                        .WithMany("Archivos")
                        .HasForeignKey("AlumbradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ArchivosCementerios", b =>
                {
                    b.HasOne("AtoGobMx.Models.DireccionCementerio", "DireccionCementerio")
                        .WithMany("Archivos")
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DireccionCementerio");
                });

            modelBuilder.Entity("AtoGobMx.Models.Cementerios", b =>
                {
                    b.HasOne("AtoGobMx.Models.DireccionCementerio", "DireccionCementerio")
                        .WithMany("Cementerios")
                        .HasForeignKey("DireccionId");

                    b.Navigation("DireccionCementerio");
                });

            modelBuilder.Entity("AtoGobMx.Models.Coordenadas_Rutas", b =>
                {
                    b.HasOne("AtoGobMx.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("AtoGobMx.Models.Empleado", b =>
                {
                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("AtoGobMx.Models.PuestoTrabajo", "PuestoTrabajo")
                        .WithMany()
                        .HasForeignKey("PuestoTrabajoId");

                    b.Navigation("Departamentos");

                    b.Navigation("PuestoTrabajo");
                });

            modelBuilder.Entity("AtoGobMx.Models.EmpleadosAlumbrado", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany("EmpleadosAlumbrado")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("AtoGobMx.Models.ExpedienteAlumbrado", "ExpedienteAlumbrado")
                        .WithMany("EmpleadosAlumbrado")
                        .HasForeignKey("ExpedienteAlumbradoId");

                    b.Navigation("Empleados");

                    b.Navigation("ExpedienteAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteAlumbrado", b =>
                {
                    b.HasOne("AtoGobMx.Models.Alumbrado", "Alumbrado")
                        .WithMany("ExpedienteAlumbrado")
                        .HasForeignKey("AlumbradoId");

                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany("ExpedienteAlumbrado")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("AtoGobMx.Models.PAT_Vehiculo", null)
                        .WithMany("ExpedienteAlumbrado")
                        .HasForeignKey("PAT_VehiculoVehiculoId");

                    b.Navigation("Alumbrado");

                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteDigital", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_Empleados", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("AtoGobMx.Models.OP_Obras", "ObrasPublicas")
                        .WithMany("OP_Empleados")
                        .HasForeignKey("ObraId");

                    b.Navigation("Empleados");

                    b.Navigation("ObrasPublicas");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_Obras", b =>
                {
                    b.HasOne("AtoGobMx.Models.OP_EstatusObras", "OP_EstatusObras")
                        .WithMany("ObrasPublicas")
                        .HasForeignKey("EstatusObraId");

                    b.Navigation("OP_EstatusObras");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Armeria", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleado")
                        .WithMany("Armería")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_EquipoComputo", b =>
                {
                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoGobMx.Models.PAT_EstatusEquipo", "EstatusEquipo")
                        .WithMany("EquipoComputo")
                        .HasForeignKey("EstatusEquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamentos");

                    b.Navigation("EstatusEquipo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Mobiliario", b =>
                {
                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoGobMx.Models.PAT_TipoMobiliario", "TipoMobiliario")
                        .WithMany()
                        .HasForeignKey("TipoMobiliarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamentos");

                    b.Navigation("TipoMobiliario");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Monitor", b =>
                {
                    b.HasOne("AtoGobMx.Models.PAT_EquipoComputo", "EquipoComputo")
                        .WithMany()
                        .HasForeignKey("EquipoComputoId");

                    b.Navigation("EquipoComputo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Mouse", b =>
                {
                    b.HasOne("AtoGobMx.Models.PAT_EquipoComputo", "EquipoComputo")
                        .WithMany()
                        .HasForeignKey("EquipoComputoId");

                    b.Navigation("EquipoComputo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Teclado", b =>
                {
                    b.HasOne("AtoGobMx.Models.PAT_EquipoComputo", "EquipoComputo")
                        .WithMany()
                        .HasForeignKey("EquipoComputoId");

                    b.Navigation("EquipoComputo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Vehiculo", b =>
                {
                    b.HasOne("AtoGobMx.Models.PAT_EstatusVehiculo", "EstatusVehiculo")
                        .WithMany()
                        .HasForeignKey("EstatusVehiculoId");

                    b.Navigation("EstatusVehiculo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_ControlVales", b =>
                {
                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany("ControlDeVales")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany("ControlDeVales")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("AtoGobMx.Models.PROV_EstatusVale", "PROV_EstatusVale")
                        .WithMany("ControlDeVales")
                        .HasForeignKey("EstatusValeId");

                    b.HasOne("AtoGobMx.Models.PROV_Proveedor", "PROV_Proveedor")
                        .WithMany("ControlDeVales")
                        .HasForeignKey("ProveedorId");

                    b.HasOne("AtoGobMx.Models.PROV_TipoVales", "TipoVales")
                        .WithMany("ControlDeVales")
                        .HasForeignKey("TipoId");

                    b.Navigation("Departamentos");

                    b.Navigation("Empleados");

                    b.Navigation("PROV_EstatusVale");

                    b.Navigation("PROV_Proveedor");

                    b.Navigation("TipoVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_DetalleVale", b =>
                {
                    b.HasOne("AtoGobMx.Models.PROV_ControlVales", "PROV_ControlVale")
                        .WithMany("PROV_DetalleVales")
                        .HasForeignKey("ControlValeId");

                    b.HasOne("AtoGobMx.Models.PROV_Producto", "PROV_Producto")
                        .WithMany("PROV_DetalleVale")
                        .HasForeignKey("ProductoId");

                    b.Navigation("PROV_ControlVale");

                    b.Navigation("PROV_Producto");
                });

            modelBuilder.Entity("AtoGobMx.Models.PuestoTrabajo", b =>
                {
                    b.HasOne("AtoGobMx.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Cita", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_EstatusReceta", b =>
                {
                    b.HasOne("AtoGobMx.Models.SERMED_EstatusReceta", null)
                        .WithMany("EstatusRecetas")
                        .HasForeignKey("SERMED_EstatusRecetaEstatusRecetaId");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_ExpedienteMedico", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany("ExpedienteMedico")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_ProductosReceta", b =>
                {
                    b.HasOne("AtoGobMx.Models.SERMED_Producto", "Producto")
                        .WithMany("ProductosReceta")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoGobMx.Models.SERMED_Receta", "Receta")
                        .WithMany("ProductosReceta")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Receta", b =>
                {
                    b.HasOne("AtoGobMx.Models.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("AtoGobMx.Models.SERMED_EstatusReceta", "EstatusReceta")
                        .WithMany()
                        .HasForeignKey("EstatusRecetaId");

                    b.Navigation("Empleados");

                    b.Navigation("EstatusReceta");
                });

            modelBuilder.Entity("AtoGobMx.Models.VehiculosAlumbrado", b =>
                {
                    b.HasOne("AtoGobMx.Models.ExpedienteAlumbrado", "ExpedienteAlumbrado")
                        .WithMany("VehiculosAlumbrado")
                        .HasForeignKey("ExpedienteAlumbradoId");

                    b.HasOne("AtoGobMx.Models.PAT_Vehiculo", "Vehiculo")
                        .WithMany("VehiculosAlumbrado")
                        .HasForeignKey("VehiculoId");

                    b.Navigation("ExpedienteAlumbrado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AtoGobMx.Models.Alumbrado", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("ExpedienteAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.Departamentos", b =>
                {
                    b.Navigation("ControlDeVales");

                    b.Navigation("ExpedienteAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.DireccionCementerio", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Cementerios");
                });

            modelBuilder.Entity("AtoGobMx.Models.Empleado", b =>
                {
                    b.Navigation("Armería");

                    b.Navigation("ControlDeVales");

                    b.Navigation("EmpleadosAlumbrado");

                    b.Navigation("ExpedienteMedico");
                });

            modelBuilder.Entity("AtoGobMx.Models.EstatusAlumbrado", b =>
                {
                    b.Navigation("Alumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteAlumbrado", b =>
                {
                    b.Navigation("EmpleadosAlumbrado");

                    b.Navigation("VehiculosAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.ExpedienteDigital", b =>
                {
                    b.Navigation("Archivos");
                });

            modelBuilder.Entity("AtoGobMx.Models.InventarioAlumbrado", b =>
                {
                    b.Navigation("Alumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_EstatusObras", b =>
                {
                    b.Navigation("ObrasPublicas");
                });

            modelBuilder.Entity("AtoGobMx.Models.OP_Obras", b =>
                {
                    b.Navigation("OP_Empleados");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_EstatusEquipo", b =>
                {
                    b.Navigation("EquipoComputo");
                });

            modelBuilder.Entity("AtoGobMx.Models.PAT_Vehiculo", b =>
                {
                    b.Navigation("ExpedienteAlumbrado");

                    b.Navigation("VehiculosAlumbrado");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_ControlVales", b =>
                {
                    b.Navigation("PROV_DetalleVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_EstatusVale", b =>
                {
                    b.Navigation("ControlDeVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_Producto", b =>
                {
                    b.Navigation("PROV_DetalleVale");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_Proveedor", b =>
                {
                    b.Navigation("ControlDeVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.PROV_TipoVales", b =>
                {
                    b.Navigation("ControlDeVales");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_EstatusReceta", b =>
                {
                    b.Navigation("EstatusRecetas");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Producto", b =>
                {
                    b.Navigation("ProductosReceta");
                });

            modelBuilder.Entity("AtoGobMx.Models.SERMED_Receta", b =>
                {
                    b.Navigation("ProductosReceta");
                });

            modelBuilder.Entity("AtoGobMx.Models.TareaTipoAlumbrado", b =>
                {
                    b.Navigation("Alumbrado");
                });
#pragma warning restore 612, 618
        }
    }
}
